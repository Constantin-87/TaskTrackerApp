name: CI Tests

on:
  pull_request:
  push:
    branches-ignore: []

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install brakeman
        run: gem install brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install rubocop
        run: gem install rubocop

      - name: Lint code for consistent style
        run: rubocop -f github

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libjemalloc2 libvips sqlite3

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Make Rails executable
        run: chmod +x bin/rails

      - name: Run tests
        env:
          RAILS_ENV: test
          DB_HOST: ${{ vars.TEST_DB_HOST }}
          DB_USER: ${{ vars.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: tasktracker-test
        run: |
          bundle exec rails db:test:prepare
          bundle exec rails test
          bundle exec rails test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

  # Trigger deployment to test environment only if tests pass
  deployment_trigger:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test]
    if: success()
    steps:
      - name: Trigger Deploy to Test Environment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "deploy_test.yml",
              ref: "main"
            })
