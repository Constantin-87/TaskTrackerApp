name: CI Tests

on:
  pull_request:
  push:
    branches-ignore: []

permissions:
  actions: write
  contents: read

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install brakeman
        run: gem install brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install rubocop
        run: gem install rubocop

      - name: Lint code for consistent style
        run: rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup DB Config
        run: |
          echo "test:
            adapter: mysql2
            encoding: utf8mb4
            pool: 5
            username: test_user
            password: test_password
            host: 127.0.0.1
            database: test_db" > config/database.yml

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h127.0.0.1 --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 1
          done

      - name: Prepare Database
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails db:schema:load

      - name: Run Tests
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails test
          bundle exec rails test:system

  # Trigger deployment to production environment only if tests pass
  deployment_trigger:
    runs-on: ubuntu-latest
    needs: [scan_ruby, lint, test]
    if: success()
    steps:
      - name: Trigger Deploy to production Environment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "deploy.yml",
              ref: "master"
            })
