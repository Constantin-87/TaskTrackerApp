name: Deploy to Test Environment

on:
  push:
    branches-ignore:
      - main # Prevents this workflow from running on main branch

jobs:
  deploy-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Deploy to Test EC2
        env:
          EC2_HOST: ${{ vars.TEST_EC2_HOST }}
          EC2_USER: ${{ vars.EC2_USER }}
          EC2_PATH_BACKEND: ${{ vars.EC2_PATH_BACKEND }}
          DB_HOST: ${{ vars.TEST_DB_HOST }} # Endpoint for AWS RDS test DB
          DB_USER: ${{ vars.DB_USER }} # Database user for AWS RDS
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }} # Database password for AWS RDS
          EC2_SSH_KEY: ${{ secrets.SSH_KEY }}
          DB_NAME: tasktracker-test # Test database name
        run: |
          echo "$EC2_SSH_KEY" > ssh_key.pem
          chmod 600 ssh_key.pem
          # Use rsync to transfer files with exclusion
          rsync -avz --exclude 'vendor' --exclude 'node_modules' --exclude 'test' --exclude '.git' --exclude 'log' -e "ssh -i ssh_key.pem -o StrictHostKeyChecking=no" . "${EC2_USER}@${EC2_HOST}:${EC2_PATH_BACKEND}" || true
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem "${EC2_USER}@${EC2_HOST}" << EOF
            cd ${EC2_PATH_BACKEND}
            export DB_HOST=${DB_HOST}                  # Set DB environment variables for Rake tasks
            export DB_USER=${DB_USER}
            export DB_PASSWORD=${DB_PASSWORD}
            export DB_NAME=${DB_NAME}
            bundle install
            RAILS_ENV=test bundle exec rake assets:precompile
            RAILS_ENV=test bundle exec rake db:migrate
            sudo systemctl restart nginx
          EOF
        shell: bash

      - name: Clean up
        run: rm -f ssh_key.pem
