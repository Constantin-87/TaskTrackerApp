<%= form_with(model: @team, local: true, class: 'bg-dark text-light p-4 rounded shadow') do |form| %>

  <div class="form-group mb-3">
    <%= form.label :name, class: 'form-label' %>
    <%= form.text_field :name, class: 'form-control bg-secondary text-light', placeholder: "Enter team name", style: "width: 300px;" %>
  </div>

  <div class="form-group mb-3">
    <%= form.label :description, class: 'form-label' %>
    <%= form.text_area :description, class: 'form-control bg-secondary text-light', rows: 5, placeholder: "Task description", style: "width: 500px;" %>
  </div>

  <!-- Dual Listbox for Users -->
  <div class="form-group mb-3">

    <div class="row">
      <!-- Unassigned Users -->
      <div class="col-md-5">
        <h6>Available Users</h6>
        <select id="unassigned_users" class="form-control bg-secondary text-light" size="8" multiple>
          <% User.all.each do |user| %>
            <% unless @team.users.include?(user) %> <!-- Show only unassigned users -->
              <option value="<%= user.id %>"><%= user.first_name + ' ' + user.last_name %></option>
            <% end %>
          <% end %>
        </select>
      </div>

      <div class="col-md-2 d-flex flex-column justify-content-center">
        <!-- Buttons to assign/unassign -->
        <button type="button" id="assign_user" class="btn btn-success mb-2">Assign &gt;&gt;</button>
        <button type="button" id="unassign_user" class="btn btn-danger">&lt;&lt; Unassign</button>
      </div>

      <!-- Assigned Users -->
      <div class="col-md-5">
        <h6>Assigned Users</h6>
        <select id="assigned_users" class="form-control bg-secondary text-light" size="8" multiple>
          <% @team.users.each do |user| %>
            <option value="<%= user.id %>"><%= user.first_name + ' ' + user.last_name %></option>
          <% end %>
        </select>
      </div>
    </div>

    <!-- Hidden field to store selected user ids -->
    <%= hidden_field_tag 'team[user_ids][]', @team.user_ids.join(','), id: 'assigned_user_ids' %>
  </div>

  <!-- Add the board selection in a similar way -->
  <div class="form-group mb-3">

    <div class="row">
      <!-- Unassigned Boards -->
      <div class="col-md-5">
        <h6>Available Boards</h6>
        <select id="unassigned_boards" class="form-control bg-secondary text-light" size="8" multiple>
          <% Board.all.each do |board| %>
            <% unless @team.boards.include?(board) %> <!-- Show only unassigned boards -->
              <option value="<%= board.id %>"><%= board.name %></option>
            <% end %>
          <% end %>
        </select>
      </div>

      <div class="col-md-2 d-flex flex-column justify-content-center">
        <!-- Buttons to assign/unassign -->
        <button type="button" id="assign_board" class="btn btn-success mb-2">Assign &gt;&gt;</button>
        <button type="button" id="unassign_board" class="btn btn-danger">&lt;&lt; Unassign</button>
      </div>

      <!-- Assigned Boards -->
      <div class="col-md-5">
        <h6>Assigned Boards</h6>
        <select id="assigned_boards" class="form-control bg-secondary text-light" size="8" multiple>
          <% @team.boards.each do |board| %>
            <option value="<%= board.id %>"><%= board.name %></option>
          <% end %>
        </select>
      </div>
    </div>

    <!-- Hidden field to store selected board ids -->
    <%= hidden_field_tag 'team[board_ids][]', @team.board_ids.join(','), id: 'assigned_board_ids' %>
  </div>

  <div class="actions">
    <%= form.submit 'Save Team', class: 'btn btn-primary mt-4' %>
  </div>

<% end %>

<script>

  document.addEventListener("turbo:load", function () {
    
    // Ensure these elements exist before adding event listeners
    const assignUserBtn = document.getElementById("assign_user");
    const unassignUserBtn = document.getElementById("unassign_user");
    const assignBoardBtn = document.getElementById("assign_board");
    const unassignBoardBtn = document.getElementById("unassign_board");
    const assignedUsers = document.getElementById("assigned_users");
    const unassignedUsers = document.getElementById("unassigned_users");
    const assignedBoards = document.getElementById("assigned_boards");
    const unassignedBoards = document.getElementById("unassigned_boards");
    var userIds = [];
    var boardIds = [];

    if (assignUserBtn && unassignUserBtn && assignBoardBtn && unassignBoardBtn) {
      function moveOptions(fromSelect, toSelect) {
        const selectedOptions = Array.from(fromSelect.selectedOptions);
        selectedOptions.forEach((option) => {
          toSelect.appendChild(option);
        });
      }

      // Assign users
      assignUserBtn.addEventListener("click", function () {
        moveOptions(unassignedUsers, assignedUsers);
        updateAssignedUserIds();
      });

      // Unassign users
      unassignUserBtn.addEventListener("click", function () {
        moveOptions(assignedUsers, unassignedUsers);
        updateAssignedUserIds();
      });

      // Assign boards
      assignBoardBtn.addEventListener("click", function () {
        moveOptions(unassignedBoards, assignedBoards);
        updateAssignedBoardIds();
      });

      // Unassign boards
      unassignBoardBtn.addEventListener("click", function () {
        moveOptions(assignedBoards, unassignedBoards);
        updateAssignedBoardIds();
      });

      function updateAssignedUserIds() {
        if (assignedUsers) {
          userIds = Array.from(assignedUsers.options).map(
            (option) => option.value
          );
          document.getElementById("assigned_user_ids").value =
            userIds.length > 0 ? userIds.join(",") : "";
        } else {
          console.log("Assigned users element is missing.");
        }
      }

      function updateAssignedBoardIds() {
        if (assignedBoards) {
          boardIds = Array.from(assignedBoards.options).map(
            (option) => option.value
          );
          document.getElementById("assigned_board_ids").value =
            boardIds.length > 0 ? boardIds.join(",") : "";
        } else {
          console.log("Assigned boards element is missing.");
        }
      }

      const form = document.querySelector("form");
      form.addEventListener("submit", function () {
        updateAssignedUserIds();
        updateAssignedBoardIds();
      });
    } else {
      console.log(
        "Some required elements for assign/unassign functionality are missing."
      );
    }
  });

</script>